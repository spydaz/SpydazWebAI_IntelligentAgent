<?xml version="1.0"?>
<!--
Generated by VSdocman, see http://www.helixoft.com
-->
<doc>
  <assembly>
    <name>SpydazWebAI_Class_IntelligentAgent</name>
  </assembly>
  <members>
    <member name="N:SpydazWebAI_IntelligentAgent.AI_AGENT">
    </member>
    <member name="N:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients">
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.InteractiveConsumer">
      <summary>
THis Class Enables for a Consumer of the Intelligent Agent Class To Interact With the Agent By Sending a UserInput to the Agent On Receipt of the Response It can be republished for use.</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.InteractiveConsumer.PublishResponse(System.String@)">
      <summary>
Data Received from the Agent is Sent to this sub to be handled</summary>
      <param name="Response">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.InteractiveConsumer.PublishUserInput(System.String@)">
      <summary>
UserInput Received from the Agent is sent to this sub to be handled</summary>
      <param name="UserInput">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.InteractiveConsumer.ResponseRecieved(System.String)">
      <summary>
Handles Responses From the IntelligentAgent Class</summary>
      <param name="Response">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.InteractiveConsumer.SendUserInput(System.String@)">
      <summary>
Sends UserInput to the Intelligent Agent</summary>
      <param name="UserInputStr">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.Subscriber">
      <summary>
This Class Enables for Userinput updates and Response Updates Published by the intelligent agent To be Displayed or Republished for display or use</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.Subscriber.PublishResponse(System.String@)">
      <param name="Response">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.Subscriber.PublishUserInput(System.String@)">
      <param name="UserInput">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.Subscriber.UpdateInput(System.String)">
      <summary>
This is the channel to receive data from the publisher this variable needs to match  the data being updated from the publisher   Inputs received to the Agent will be sent to subscribers</summary>
      <param name="Data">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Clients.Subscriber.UpdateResponse(System.String)">
      <summary>
This is the channel to receive data from the publisher this variable needs to match  the data being updated from the publisher   Responses Generated by the Agent will be sent to subscribers</summary>
      <param name="Data">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Artificial_Intelligence_Brain">
      <summary>
MAIN BRAIN RESPONSE Needs to be OverWritten</summary>
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.Artificial_Intelligence_Brain.Response">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Artificial_Intelligence_Brain.#ctor(System.String@)">
      <param name="UserInput">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices">
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice">
      <summary>
Allows For input devices to be attached to the Intelligent Agent</summary>
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice.SensorTextRecieved">
      <summary>
Occurs when Text is populated.</summary>
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice.Activated">
      <summary>
Gets a value indicating whether Sensor is activated to allow output.</summary>
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice.Name">
      <summary>
Gets Identification.</summary>
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice.RecievedText">
      <summary>
Gets TextRecived held in Class.</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice.Activate">
      <summary>
Activates Sensor</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice.Deactivate">
      <summary>
Deactivates sensor</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.IntelligentAgentResponseObserver">
      <summary>
Abstract Class: Publisher / Subscriber DesignPattern This allows for clients to register to receive Response Updates from the Agentmodel subscribers implement this interface to receive notifications from the publisher</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.IntelligentAgentResponseObserver.UpdateInput(System.String)">
      <summary>
This is the channel to receive data from the publisher this variable needs to match  the data being updated from the publisher   Inputs received to the Agent will be sent to subscribers</summary>
      <param name="Data">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.IntelligentAgentResponseObserver.UpdateResponse(System.String)">
      <summary>
This is the channel to receive data from the publisher this variable needs to match  the data being updated from the publisher   Responses Generated by the Agent will be sent to subscribers</summary>
      <param name="Data">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.OutputDevice">
      <summary>
Allows for Output devices to be attached to the Class</summary>
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.OutputDevice.Loaded">
      <summary>
Gets a value indicating whether The device is loaded as an output device.</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.OutputDevice.EffectActuators(System.String@)">
      <summary>
Activates all actuators</summary>
      <param name="Text">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.OutputDevice.load">
      <summary>
Loads the device</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.OutputDevice.Unload">
      <summary>
Unloads the device</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent">
      <summary>
This Class Enables for Subscribers to receive Updates from the class Inputs received from sensors and Response generated From evaluation Process 1. On Sensor input (Environment.Sensors) 2. Check Rules (Evaluate) 3. Effect Actuators (Environment.Actuators) This Class Can be used as a foundation For Creating Artificial intelligent Interfaces</summary>
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.AgentResponded">
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.SensorTextRecieved">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.AttachedInputDevices">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.AttachedOutputDevices">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.InputDevicesLoaded">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.OutputDevicesLoaded">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.SensorText">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.SpeechLoaded">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.#ctor">
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment">
      <summary>
Interactions with the environmental Products</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators">
      <summary>
Actions to be performed in the environment</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators.Actions">
      <summary>
Actions can be modeled from this class</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators.Actions.ComputerSpeechOut">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators.Actions.ComputerSpeechOut.Req">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators.Actions.ComputerSpeechOut.Activate">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators.Actions.ComputerSpeechOut.DeActivate">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Actuators.Actions.ComputerSpeechOut.SpeakText(System.String@)">
      <param name="Txt">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors">
      <summary>
Receives Signals from outside sensors, To send input a reference to the instance of the agent model sensor class for each sensor in the class new sensors can be created by shadowing this class</summary>
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SensorsRecievedText">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SensorText">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SpeechRecognitionEnabled">
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SpeechSensor">
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SpeechSensor.OutputTextChanged">
      <summary>
Speech Sensor received text</summary>
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SpeechSensor.RecievedText">
      <summary>
Text received</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SpeechSensor.#ctor">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.SpeechSensor.SpeakText(System.String@)">
      <summary>
Outputs Speech to Sensor</summary>
      <param name="NewText">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.TextSensor">
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.TextSensor.TextRecieved">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.TextSensor.SensorText">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Environment.Sensors.InputText(System.String@)">
      <summary>
Enables for Manual TextInput</summary>
      <param name="InputStr">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate">
      <summary>
Evaluate sensor information , Return action to be completed evaluation has target goals as well as preset goals percepts are potentially allowable tolerance levels</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate.Goals">
      <summary>
Goals can be modeled using this class Agent Goals</summary>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate.Goals.Responder">
      <summary>
Generates Response Based on GetResponseFunction</summary>
    </member>
    <member name="E:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate.Goals.Responder.ResponseFound">
    </member>
    <member name="P:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate.Goals.Responder.Response">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate.Goals.Responder.GetResponse(System.String@)">
      <summary>
Brain Function:   Provides an Output in xResponse and Response in Class And Raises Event ResponseFound</summary>
      <param name="UserInput">
</param>
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.Evaluate.Percepts">
      <summary>
Percepts can be modeled from this class Comparative Sensor Markers/Milestones; Analysis of input data to produce Results to be evaluated or displayed.</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.ActivateInputDevices">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.AddInputDevice(SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.InputDevice@)">
      <param name="NewDevice">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.AddOutputDevice(SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.OutputDevice@)">
      <param name="mDevice">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.DeActivateInputDevices">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.DisableSpeechReco">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.EffectActuatorsActivateSpeech">
      <summary>
Activates speech</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.EffectActuatorsDeActivateSpeech">
      <summary>
DeActivates Speech</summary>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.EffectActuatorsSpeech(System.String@)">
      <summary>
Must be activated</summary>
      <param name="InputStr">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.EnableSpeechReco">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.InputText(System.String@)">
      <summary>
Activates TextSensor</summary>
      <param name="InputStr">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.LoadOutputDevices">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.RegisterResponseObserver(SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.IntelligentAgentResponseObserver)">
      <param name="mObserver">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.RemoveResponseObserver(SpydazWebAI_IntelligentAgent.AI_AGENT.Devices.IntelligentAgentResponseObserver)">
      <param name="mObserver">
</param>
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.AI_AGENT.IntelligentAgent.UnloadOutputDevices">
    </member>
    <member name="T:SpydazWebAI_IntelligentAgent.Ext">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.Ext.GetSource">
    </member>
    <member name="M:SpydazWebAI_IntelligentAgent.Ext.GetInfo">
    </member>
    <member name="N:SpydazWebAI_IntelligentAgent">
    </member>
  </members>
</doc>
